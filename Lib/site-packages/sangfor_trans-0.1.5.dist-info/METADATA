Metadata-Version: 2.1
Name: sangfor-trans
Version: 0.1.5
Summary: Free Sangfor Translate API with Python. Translates totally free of charge.
Home-page: https://github.com/Scoefield/SangforTrans
Author: scoefield
Author-email: scoefield@163.com
License: MIT
Keywords: sangfor translate translator
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: Freeware
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Topic :: Education
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/markdown

# sangfor_trans: Free sangfor translate for Python

python 3.4+ 
python 2.7+

----------
Quickstart
----------
You can install it from PyPI:

code: bash

   $ pip install sangfor_trans

or manual install:  
code: bash

   $ python setup.py install


~~~~~~~~~~~~~~~~~~~~~~~~~~~
single sentence translation
~~~~~~~~~~~~~~~~~~~~~~~~~~~

code: python

    >>> from sangfor_trans import get_translate
    >>> from sangfor_trans.config import GOOGLE, BAIDU
    >>> translator = get_translate.GetTranslator(GOOGLE)
    >>> translator.translate("auto", "zh", "hello world. \n this is my book")
    u'你好，世界。这是我的书'


----------------
support language
----------------

.. code::  

  'afrikaans': 'af',  
  'arabic': 'ar',  
  'belarusian': 'be',  
  'bulgarian': 'bg',  
  'catalan': 'ca',  
  'czech': 'cs',  
  'welsh': 'cy',  
  'danish': 'da',  
  'german': 'de',  
  'greek': 'el',  
  'english': 'en',  
  'esperanto': 'eo',  
  'spanish': 'es',  
  'estonian': 'et',  
  'persian': 'fa',  
  'finnish': 'fi',  
  'french': 'fr',  
  'irish': 'ga',  
  'galician': 'gl',  
  'hindi': 'hi',  
  'croatian': 'hr',  
  'hungarian': 'hu',  
  'indonesian': 'id',  
  'icelandic': 'is',  
  'italian': 'it',  
  'hebrew': 'iw',  
  'japanese': 'ja',  
  'korean': 'ko',  
  'latin': 'la',  
  'lithuanian': 'lt',  
  'latvian': 'lv',  
  'macedonian': 'mk',  
  'malay': 'ms',  
  'maltese': 'mt',  
  'chinese_simplified': 'zh-CN',  
  'chinese_traditional': 'zh-TW',  
  'auto': 'auto'  

----------
How to make python third-party library and upload to PyPi
----------
step1: python setup.py sdist  
step2: pip install twine  
step3: we need to register an account on PyPI and create a file ~/.pypirc in the local user root directory（windows: the .pypirc file is in C:\Users\sangfor）, so that we don't need to enter the account password in the future.
```
[distutils]
index-servers=pypi

[pypi]
repository = https://upload.pypi.org/legacy/
username = <username>
password = <password> 
```
step4: Next comes the last step, uploading packaged libraries. We use twine here. If there is no installation in the environment, we need to use PIP install twine to install it first.
```
twine upload dist/* 
```
End: At this point, you can see your own source code package on the web page, and you can use our own Python library by using PIP install package name.
